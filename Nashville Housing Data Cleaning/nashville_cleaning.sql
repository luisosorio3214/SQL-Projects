/* DATA SET : NASHVILLE HOUSING */

/* DATA CLEANING IN MYSQL WORKBENCH */ 

# SCHEMA SELCTION
USE NASHVILLE;

/* count the number of records in the table */
SELECT count(*)
FROM nashville_housing;

/* Cleaning Data in SQL Queries */

SELECT *
FROM nashville_housing;

select SaleDate, 
	substring(SaleDate, 1, locate(' ', SaleDate)) AS Month,
    substring(SaleDate, locate(' ', SaleDate), locate(',', SaleDate)) AS Day,
    substring(SaleDate, locate(',', SaleDate) + 1)  AS Year
from nashville_housing;

-----------------------------------------------------------------------------------------
-- POPULATE PROPERTY ADDRESS DATA
SET SQL_SAFE_UPDATES = 0;

UPDATE NASHVILLE_HOUSING
SET PROPERTYADDRESS=NULL
WHERE PROPERTYADDRESS = '';

SELECT *
FROM NASHVILLE_HOUSING
WHERE PROPERTYADDRESS IS NULL;

UPDATE NASHVILLE_HOUSING a
INNER JOIN NASHVILLE_HOUSING b
	ON a.PARCELID = b.PARCELID
    AND a.UNIQUEID <> b.UNIQUEID
SET a.PROPERTYADDRESS = IFNULL(a.PROPERTYADDRESS, b.PROPERTYADDRESS)
WHERE a.PROPERTYADDRESS IS NULL;

-----------------------------------------------------------------------------------------
/* BREAKING OUT ADDRESS INTO INDIVIDUAL COLUMNS (ADDRESS, CITY, STATE) */

SELECT PROPERTYADDRESS
FROM NASHVILLE_HOUSING;

SELECT SUBSTRING(PROPERTYADDRESS,1, LOCATE(',', PROPERTYADDRESS) - 1) AS Address,
	SUBSTRING(PROPERTYADDRESS, LOCATE(',', PROPERTYADDRESS) + 1, LENGTH(PROPERTYADDRESS)) AS City
FROM NASHVILLE_HOUSING;

ALTER TABLE NASHVILLE_HOUSING
ADD PropertySplitAddress VARCHAR(255);

ALTER TABLE NASHVILLE_HOUSING
ADD PropertySplitCity VARCHAR(255);

UPDATE NASHVILLE_HOUSING
SET PropertySplitAddress = SUBSTRING(PROPERTYADDRESS, 1, LOCATE(',', PROPERTYADDRESS) - 1);

UPDATE NASHVILLE_HOUSING
SET PropertySplitCity = SUBSTRING(PROPERTYADDRESS, LOCATE(',', PROPERTYADDRESS) + 1, LENGTH(PROPERTYADDRESS));

SELECT *
FROM NASHVILLE_HOUSING;

-----------------------------------------------------------------------------------------
-- NOW WE SPLIT OWNERADDRESS (ADDRESS, CITY, STATE)
SELECT OWNERADDRESS, 
SUBSTRING(OWNERADDRESS, 1, LOCATE(',',OWNERADDRESS)-1) AS ADDRESS,
SUBSTRING(SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1),1,LOCATE(',', SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1))-1) AS CITY,
SUBSTRING(SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1), LOCATE(',', SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1)) + 1) AS STATE
FROM NASHVILLE_HOUSING;

ALTER TABLE NASHVILLE_HOUSING
ADD OwnerSplitAddress VARCHAR(255);

ALTER TABLE NASHVILLE_HOUSING
ADD OwnerSplitCity VARCHAR(255);

ALTER TABLE NASHVILLE_HOUSING
ADD OwnerSplitState VARCHAR(255);

UPDATE NASHVILLE_HOUSING
SET OwnerSplitAddress = SUBSTRING(OWNERADDRESS, 1, LOCATE(',',OWNERADDRESS)-1);

UPDATE NASHVILLE_HOUSING
SET OwnerSplitCity = SUBSTRING(SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1),1,LOCATE(',', SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1))-1);

UPDATE NASHVILLE_HOUSING
SET OwnerSplitState = SUBSTRING(SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1), LOCATE(',', SUBSTRING(OWNERADDRESS,LOCATE(',',OWNERADDRESS)+1)) + 1);

SELECT *
FROM NASHVILLE_HOUSING;

-----------------------------------------------------------------------------------------
/* CHANGE Y AND N TO YESY AND NO IN 'SOLD AS VACANT' FIELD */

SELECT DISTINCT(SOLDASVACANT), COUNT(*)
FROM NASHVILLE_HOUSING
GROUP BY SOLDASVACANT
ORDER BY COUNT(*) DESC;

SELECT SOLDASVACANT,
	CASE WHEN SOLDASVACANT = 'Y' THEN 'Yes'
		WHEN SOLDASVACANT = 'N' THEN 'No'
        ELSE SOLDASVACANT
	END AS FIXED
FROM NASHVILLE_HOUSING;

UPDATE NASHVILLE_HOUSING
SET SOLDASVACANT = CASE WHEN SOLDASVACANT = 'Y' THEN 'Yes'
						WHEN SOLDASVACANT = 'N' THEN 'No'
						ELSE SOLDASVACANT
						END;

-----------------------------------------------------------------------------------------
/* REMOVE DUPLICATES */ 
WITH RowNumCTE AS (
	SELECT *, ROW_NUMBER() OVER(
		PARTITION BY PARCELID, 
		PROPERTYADDRESS,
		SALEPRICE,
		SALEDATE,
		LEGALREFERENCE
		ORDER BY UNIQUEID) AS row_num
	FROM NASHVILLE_HOUSING
	ORDER BY PARCELID),
t2 AS (
	SELECT *
	FROM RowNumCTE
	WHERE row_num > 1
	ORDER BY  PROPERTYADDRESS)
DELETE
FROM NASHVILLE_HOUSING
WHERE UNIQUEID IN (
	SELECT UNIQUEID
    FROM t2);



WITH RowNumCTE AS (
	SELECT *, ROW_NUMBER() OVER(
		PARTITION BY PARCELID, 
		PROPERTYADDRESS,
		SALEPRICE,
		SALEDATE,
		LEGALREFERENCE
		ORDER BY UNIQUEID) AS row_num
	FROM NASHVILLE_HOUSING
	ORDER BY PARCELID)
SELECT *
FROM RowNumCTE
WHERE row_num > 1
ORDER BY PROPERTYADDRESS;

-----------------------------------------------------------------------------------------
/* DELETE UNUSUED COLUMNS */

/* DELETING COLUMNS IS NOT USUAULLY DONE IN THE DATABASE OR CREATE A TABLE COPY */

SELECT *
FROM NASHVILLE_HOUSING;

ALTER TABLE NASHVILLE_HOUSING
DROP COLUMN  OWNERADDRESS;

ALTER TABLE NASHVILLE_HOUSING
DROP COLUMN TAXDISTRICT;

ALTER TABLE NASHVILLE_HOUSING
DROP COLUMN PROPERTYADDRESS;