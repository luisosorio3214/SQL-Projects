-- FINAL PROJECT by Luis Osorio

/************************
*************************/

-- PART 1

-- TASK 1 

SELECT * FROM BAND;
SELECT * FROM PLAYER;
SELECT * FROM ALBUM;

SELECT BANDNAME, ALBUMNAME, RELEASEDATE
FROM BAND B 
INNER JOIN ALBUM A ON B.IDBAND = A.IDBAND
ORDER BY BANDNAME, RELEASEDATE DESC;

-- TASK 2
SELECT * FROM BAND;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;

SELECT CONCAT(PFNAME,' ',PLNAME) AS 'FULL PLAYER NAME', INSTRUMENT, BANDNAME
FROM PLAYER P 
INNER JOIN BAND B ON P.IDBAND = B.IDBAND
INNER JOIN INSTRUMENT I ON P.INSTID = I.INSTID
WHERE INSTRUMENT = 'DRUMS';

-- TASK 3
SELECT * FROM BAND;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;

SELECT BANDNAME, COUNT(DISTINCT INSTRUMENT)
FROM BAND B
INNER JOIN PLAYER P ON B.IDBAND = P.IDBAND
INNER JOIN INSTRUMENT I ON P.INSTID = I.INSTID
GROUP BY BANDNAME
ORDER BY BANDNAME;

-- TASK 4
SELECT * FROM BAND;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;

SELECT COUNT(P.INSTID) AS 'NUMBER OF PLAYERS WHO PLAY', I.INSTRUMENT 
FROM PLAYER P 
INNER JOIN INSTRUMENT I ON P.INSTID = I.INSTID
GROUP BY I.INSTRUMENT
ORDER BY COUNT(P.INSTID) DESC;

-- TASK 5
SELECT * FROM BAND;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;
SELECT * FROM ALBUM;

SELECT *
FROM ALBUM 
WHERE ALBUMNAME IS NULL
OR RELEASEDATE IS NULL;

# to handle the missing data we can drop these rows
# or we can impute the missing data

/*******************************
*********************************
********************************/

-- PART 2

-- TASK 1
SELECT * FROM BAND;
SELECT * FROM GIG;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;
SELECT * FROM ALBUM;

INSERT INTO BAND VALUES(NULL,1,'Weezer');
INSERT INTO BAND VALUES(NULL,1,'TLC');
INSERT INTO BAND VALUES(NULL,1,'Paramore');
INSERT INTO BAND VALUES(NULL,1,'Blackpink');
INSERT INTO BAND VALUES(NULL,1,'Vampire Weekend');

-- TASK 2 

/* WE WILL ADD TO THE PLAYER TABLE */

-- TASK 3
SELECT * FROM BAND; 
SELECT * FROM PLAYER;
SELECT * FROM INSTRUMENT;

INSERT INTO PLAYER VALUES(NULL, 3, 22,'Rivers','Cuomo','Rochester','New York');
INSERT INTO PLAYER VALUES(NULL, 1, 22,'Brian','Bell','Iowa City','Iowa');
INSERT INTO PLAYER VALUES(NULL, 4, 22,'Patrick','Wilson','Buffulo','New York');
INSERT INTO PLAYER VALUES(NULL, 2, 22,'Scott','Shriner','Toledo','Ohio');

INSERT INTO PLAYER VALUES(NULL, 3, 23,'Tionne','Watkins','Des Moines','Iowa');
INSERT INTO PLAYER VALUES(NULL, 3, 23,'Rozonda','Thomas','Colombus','Georgia');

INSERT INTO PLAYER VALUES(NULL, 3, 24,'Hayley','Williams','Franklin','Tennessee');
INSERT INTO PLAYER VALUES(NULL, 1, 24,'Taylor','York','Nashville','Tennessee');
INSERT INTO PLAYER VALUES(NULL, 4, 24,'Zac','Farro','Voorhees Township','New Jersey');

INSERT INTO PLAYER VALUES(NULL, 3, 25,'Jisoo','Kim',NULL,'South Korea');
INSERT INTO PLAYER VALUES(NULL, 3, 25,'Jennie','Kim',NULL,'South Korea');
INSERT INTO PLAYER VALUES(NULL, 3, 25,'Roseanne','Park',NULL,'New Zealand');
INSERT INTO PLAYER VALUES(NULL, 3, 25,'Lisa','Manoban',NULL,'Thailand');

INSERT INTO PLAYER VALUES(NULL, 3, 26,'Ezra','Koenig','New York','New York');
INSERT INTO PLAYER VALUES(NULL, 2, 26,'Chris','Baio','Bronxville','New York');
INSERT INTO PLAYER VALUES(NULL, 4, 26,'Chris','Tomson','Upper Freehold Township','New Jersey');

-- TASK 4
SELECT * FROM VENUE;

INSERT INTO VENUE VALUES(NULL, 'Twin City Rock House', 'Minneapolis', 'MN',55414,2000);

-- TASK 5
SELECT * FROM BAND;
SELECT * FROM GIG;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;
SELECT * FROM ALBUM;

SELECT STATE, SUM(SEATS) AS 'TOTAL NUMBER OF SEATS'
FROM VENUE
GROUP BY STATE
ORDER BY SUM(SEATS) DESC;

/***********************************
************************************
***********************************/


-- PART 3

-- TASK 1
SELECT * FROM BAND;
SELECT * FROM GIG;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;
SELECT * FROM ALBUM;

/* WE SHOULD ADD TO THE GIG TABLE */

-- TASK 2 
SELECT * FROM GIG;
SELECT * FROM VENUE;
SELECT * FROM BAND;

INSERT INTO GIG VALUES(NULL,4, 2, '2022-05-05', 19000);

INSERT INTO GIG VALUES(NULL,12,26, '2022-04-15',NULL);

INSERT INTO GIG VALUES(NULL,8,23, '2022-06-07', 18000);

INSERT INTO GIG VALUES(NULL,2,22, '2022-07-03',175);

-- TASK 3
SELECT * FROM GIG;
SELECT * FROM VENUE;

SELECT VNAME AS 'VENUE NAME', CASE 
					WHEN G.NUMATTENDEES > V.SEATS THEN 'OVERSOLD TICKETS'
                    WHEN G.NUMATTENDEES = V.SEATS THEN 'SOLD ALL TICKETS'
                    ELSE 'STILL SELLING TICKETS'
				END AS SALES
FROM VENUE V
INNER JOIN GIG G ON V.IDVENUE = G.IDVENUE
ORDER BY VNAME DESC;

-- TASK 4
SELECT * FROM GIG;

-- VAMPIRE WEEKEND IDBAND = 26
UPDATE GIG 
SET NUMATTENDEES = 1750
WHERE GIGID = 2;

-- TASK 5
UPDATE GIG 
SET NUMATTENDEES = 125
WHERE GIGID = 4;

-- TASK 6
SELECT * FROM BAND;
SELECT * FROM GIG;
SELECT * FROM INSTRUMENT;
SELECT * FROM PLAYER;
SELECT * FROM VENUE;
SELECT * FROM ALBUM;

CREATE VIEW VW_GIGINFO AS
SELECT BANDNAME, 
		GIGDATE, 
        VNAME AS 'VENUE NAME', 
		NUMATTENDEES, 
        SEATS AS 'VENUE CAPACITY', 
		concat((NUMATTENDEES/SEATS)*100,'%') AS 'PERCENTAGE OF VENUE CAPACITY USED'
FROM BAND B 
INNER JOIN GIG G ON B.IDBAND = G.IDBAND 
INNER JOIN VENUE V ON G.IDVENUE = V.IDVENUE
ORDER BY GIGDATE;

SELECT * FROM VW_GIGINFO;

/*************************************
*************************************
**********************************/

-- PART 4

-- TASK 1
SELECT * FROM VENUE;

DELIMITER $
CREATE PROCEDURE VENUESMORE()
BEGIN
	SELECT VNAME, SEATS
    FROM VENUE
    WHERE SEATS > 10000;
END $

CALL VENUESMORE();

-- TASK 2
SELECT * FROM PLAYER;
SELECT * FROM BAND;

DELIMITER $
CREATE PROCEDURE PLAYERSTATE(IN STATE1 VARCHAR(50))
BEGIN 
	SELECT CONCAT(PFNAME, ' ',PLNAME) AS PLAYERNAME, BANDNAME, HOMESTATE
    FROM PLAYER P
    INNER JOIN BAND B ON P.IDBAND = B.IDBAND
    WHERE HOMESTATE = STATE1;
END $

CALL PLAYERSTATE('CA');
CALL PLAYERSTATE('NEW YORK');